SpringMVC：是基于spring的框架，实际上就是spring的一个模块，专门是做web开发的。
            理解是servlet的一个升级

            web开发底层是servlet，框架是在servlet基础上加入一些功能，使得web开发更方便。

SpringMVC就是一个spring。Spring是容器，，ioc能够管理对象，使用<bean>，@Component，@Repository，@Service，@Controller
    SpringMVC能够创建对象，放入到容器中（SpringMVC容器），springmvc容器中放的是控制器对象。

    我们要做的是 使用@Controller创建控制器对象，把对象放入到springmvc容器中，把创建的对象作为控制器使用
    这个控制器对象能接受用户的请求，显示处理结果，就当作一个servlet来用。

    使用@Controller注解创建的是一个普通类的对象，不是Servlet。springmvc赋予了控制器对象一些额外的功能。

    web开发底层是serlvlet，springmvc中有一个对象是servlet：DispatcherServlet
    DispatcherServlet：负责接收用户的所有请求，用户把请求给了DispatcherServlet，之后DispatcherServlet把请求
                        转发给Controller对象，最后是Controller对象处理请求

    index.jsp-------DispatcherServlet(Servlet)----转发，分配-----Controller对象（@Controller注解创建的对象）

-------------------------------------------------------------------------------------------------------------------
springmvc请求的处理流程

  1）发起some.do
  2）tomcat（web.xml--url-pattern知道*.do的请求给DispatcherServlet）
  3）DispatcherServlet（根据springmvc.xml配置知道some.do---doSome()）
  4）DispatcherServlet把some.do转发给MyController.doSome()方法
  5）框架执行doSome()把得到ModelAndView进行处理，转发到show.jsp



=========================================================================================
发起请求是由哪些程序处理的？
http://localhost:8080/ch05_url_pattern/：tomcat（jsp转为servlet）
http://localhost:8080/ch05_url_pattern/images/p1.JPG：tomcat
http://localhost:8080/ch05_url_pattern/html/test.html：tomcat
http://localhost:8080/ch05_url_pattern/some.do：DisPatcherServlet（springmvc框架处理）

tomcat本身能处理静态资源文件的访问

default--servlet
1、处理静态资源
2、处理未映射到其他servlet的请求

==========================================================================================
在jsp，html中使用的地址，都是在前端页面中的地址，都是相对地址

地址分类：
    1、绝对地址，带有协议名称的是绝对地址，http://www.baidu.com
    2、相对地址：没有协议开头的，例如 user/some.do, /user/some.do
                相对地址不能独立使用，必须有一个参考地址。通过参考地址+相对地址本身才能指定资源
    3、参考地址
        1)在你的页面中，访问地址不加"/"
            访问的是：http://localhost:8080/ch06_path/index.jsp
            路径：http://localhost:8080/ch06_path/
            资源：index.jsp

            在index.jsp发起user/some.do请求，访问地址变为http://localhost:8080/ch06_path/user/some.do
            当你的地址没有斜杠开头，例如user/some.do，当你点击链接时，访问地址是当前页面是当前页面的地址，加上链接的地址
            http://localhost:8080/ch06_path/ + user/some.do
            --------------------------------------------------------------------------
            index.jsp 访问 user/some.do 返回后现在的地址： http://localhost:8080/ch06_path/user/some.do
            再点击 http://localhost:8080/ch06_path/user/user/some.do 出错

            解决方案：
                1、加入${pageContext.request.contextPath}
                2、加入一个base标签，是html中的语言。表示当前页面中访问地址的基地址
        2)在你的页面中，访问加"/"
            访问的是：http://localhost:8080/ch06_path/index.jsp
            路径：http://localhost:8080/ch06_path/
            资源：index.jsp

            在index.jsp发起user/some.do请求，访问地址变为http://localhost:8080/user/some.do
            参考地址是服务器地址 http://localhost:8080


====================================================
异常处理：
springmvc框架使用的是统一的，全局的异常处理。
把controller中的所有异常处理都集中到一个地方。采用的是aop的思想。把业务逻辑和异常处理代码分开。接耦合。

使用两个注解：
1、@ExceptionHandler
2、@ControllerAdvice


