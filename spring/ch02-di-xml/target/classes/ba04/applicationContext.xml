<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


    <!--
        引用类型的自动注入：spring框架根据某些规则可以给引用类型赋值。
        使用规则：byName，byType
        1、byName（按名称注入）：java类中，引用类型的属性名和spring容器中（配置文件）<bean>的id名称一样，
        且数据类型是一致的，这样的容器中的，spring能够赋值给引用类型。
            语法：
            <bean id="xxx" class="yyy" autowire="byName">

            </bean>

        2、byType（按类型注入）：java类中引用类型数据类型和spring容器中（配置文件）<bean>中的class属性
                                是同源关系的，这样的bean能够赋值给引用类型
            同源就是一类的意思：
              1、java类中引用类型的数据类型和bean的class的值是一样的。
              2、java类中引用类型的数据类型和bean的class的值父子关系的。
              3、java类中引用类型的数据类型和bean的class的值接口和实现类关系的。
            语法：
                <bean id="xxx" class="yyy" autowire="byType">

                </bean>
    -->
    <bean id="myStudent" class="org.example.ba04.Student" autowire="byName">
        <constructor-arg name="name" value="ryan"/>
        <constructor-arg name="age" value="23"/>
<!--        <constructor-arg name="mySchool" ref="mySchool"/>-->
    </bean>

    <!--声明school对象-->
    <bean id="school" class="org.example.ba04.School">
        <property name="name" value="USC"/>
        <property name="address" value="LA"/>
    </bean>

    <!--使用index属性-->
    <bean id="mystudent2" class="org.example.ba03.Student">
        <constructor-arg index="0" value="ryan"/>
        <constructor-arg index="1" value="23"/>
        <constructor-arg index="2" ref="myXuexiao"/>
    </bean>
    <bean id="myXuexiao" class="org.example.ba03.School">
        <property name="name" value="USC"/>
        <property name="address" value="LA"/>
    </bean>

</beans>